version: '2.3'
services:
  storage:
    image: openzipkin/zipkin-elasticsearch7
    container_name: elasticsearch
    ports:
      - 9200:9200
  zipkin:
    image: openzipkin/zipkin-slim
    container_name: zipkin    
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
      - ES_HTTP_LOGGING=BODY
    ports:
      - 9411:9411
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    depends_on:
      - storage      
  kibana:
    container_name: kibana
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:7.0.1
    environment:
      - server.port=127.0.0.1:5601
      - elasticsearch.url="http://elasticsearch:9200"
      - server.name="kibana"
    ports:
      - '5601:5601'
    # Health check to confirm availability of Kibana
    healthcheck:
          test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
          retries: 6
    depends_on:
      - storage

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  logstash:
    build: 
      context: .
      dockerfile: DockerFile
    ports:
      - "25826:25826"
      - "5044:5044"
    restart: on-failure
    depends_on:
      - elasticsearch
    depends_on:
      - storage
    
  kafkaserver:
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines: 
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup. 
    # If the latter is true, you will need to change the value 'localhost' in 
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those 
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafkaserver:29092,PLAINTEXT_HOST://kafkaserver:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  database:
    image: postgres:11.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=p0stgr@s
      - POSTGRES_DB=eagle_eye_local
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  eurekaserver:
     image: netflixoss/tmx-eurekasvr:1.0.4-SNAPSHOT
     ports:
       - "8761:8761"      
  configserver:
    image: netflixoss/tmx-confsvr:1.0.4-SNAPSHOT
    ports:
      - "8888:8888"
    environment:
      EUREKASERVER_URI: "http://eurekaserver:8761/eureka/"
      EUREKASERVER_PORT: "8761"
  zuulserver:
    image: netflixoss/tmx-zuulsvr:1.0.4-SNAPSHOT
    ports:
      - "5555:5555"
    environment:
      PROFILE: "default"
      SERVER_PORT: "5555"
      EUREKASERVER_PORT: "8761"
      DATABASESERVER_PORT: "5432"
      CONFIGSERVER_PORT: "8888"
      ORGSERVERNEW_PORT: "8087"
      SPECIALROUTES_PORT: "8910"
      ORGSERVER_PORT: "8085"
      LICENSINGSERVER_PORT: "8081"
      REDIS_PORT: "6379"
      AUTHENTICATION_PORT: "8080"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  licensingservice:
    image: netflixoss/tmx-licensing-service:1.0.4-SNAPSHOT
    depends_on:
      - kafkaserver      
    ports:
      - "8081:8081"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8081"
      EUREKASERVER_PORT: "8761"
      CONFIGSERVER_PORT: "8888"
      DATABASESERVER_PORT: "5432"
      REDIS_PORT: "6379"
      KAFKA_PORT: "9092"  
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"    
  organizationservice:
    image: netflixoss/tmx-organization-service:1.0.4-SNAPSHOT
    depends_on:
      - kafkaserver        
    ports:
      - "8085:8085"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8085"
      EUREKASERVER_PORT: "8761"
      CONFIGSERVER_PORT: "8888"
      DATABASESERVER_PORT: "5432"
      KAFKA_PORT: "9092"         
      REDIS_PORT: "6379"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"      
  authenticationservice:
    image: netflixoss/tmx-authentication-service:1.0.4-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8080"
      EUREKASERVER_PORT: "8761"
      CONFIGSERVER_PORT: "8888"
      DATABASESERVER_PORT: "5432"
      REDIS_PORT: "6379"      
  specialroutes-service:
    image: netflixoss/tmx-specialroutes-service:1.0.4-SNAPSHOT
    ports:
      - "8910:8910"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8910"
      EUREKASERVER_PORT:        "8761"
      DATABASESERVER_PORT:      "5432"
      CONFIGSERVER_PORT:        "8888"
